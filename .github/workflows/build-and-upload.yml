name: Docker Build and Upload to JFrog Artifactory

on:
  push:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: |
        docker buildx create --use
        docker buildx build --platform linux/amd64 -t nodejs:v2 --load .

    - name: Tag Docker image for JFrog Artifactory
      run: |
        docker tag nodejs:v2 devopscloud592.jfrog.io/docker/nodejs:v2

    - name: Set up JFrog CLI
      uses: jfrog/setup-jfrog-cli@v1
      with:
        jfrog-cli-version: latest

    - name: Configure JFrog CLI
      run: |
        jfrog config add devops-artifactory \
          --artifactory-url https://devopscloud592.jfrog.io/artifactory \
          --user ${{ secrets.JFROG_USERNAME }} \
          --password ${{ secrets.JFROG_PASSWORD }} \
          --url https://devopscloud592.jfrog.io/

    - name: Upload Docker image to JFrog Artifactory
      uses: jfrog/setup-jfrog-cli@v3
      env:
    # JFrog platform url (for example: https://acme.jfrog.io) 
        JF_URL: "https://devopscloud592.jfrog.io/"    
    # Basic authentication credentials
        JF_USER: ${{ secrets.JFROG_USERNAME }}
        JF_PASSWORD: ${{ secrets.JFROG_PASSWORD }}

    - run: |
        jf rt ping
        jf docker push devopscloud592.jfrog.io/docker/nodejs:v2

    - name : Run postgress docker contaner 
      run: |
       docker run --name postgres-db \
         -e DB_USER=postgres \
         -e DB_PASS=password \
         -e DB_HOST=localhost \
         -e DB_NAME=postgres \
         -d -p 5432:5432 postgres  
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Install dependencies
      run: npm install  
    - name: Start Node.js Application
      run: npm start
    - name: Health Check
      run: |
        sleep 10 
        curl -f http://localhost:3000/db_healthcheck || exit 1  
